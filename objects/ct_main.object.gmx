<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///starting variables
ded=false;
roomname= noone;
room_speed=60;
global.bp = global.bpDefault
restarting = false

if room=w1_1
{
    global.gameon=true
}

if background_index[0] = -1
    {
    background_index[0] = bg_temp
    }
if !background_visible[0] background_visible[0] = true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///world setter

if room = global.w1start {global.curWorld = 1}
if room = global.w2start {global.curWorld = 2}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///view
    view_enabled = true;
    view_visible[0] = true;
    view_object[0] = cl_player;
    view_wview[0] = 180;
    view_hview[0] = 120;
    view_hborder[0] = view_wview[0] - 75;
    view_vborder[0] = view_hview[0] - 75;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///room cleaner
//world cleaner
if global.worldClear &gt;= global.curWorld
    {
     with (cl_slime) {instance_destroy()};
     with (obj_world_gate) {instance_destroy()};
     global.bp = global.bpClear
    }

//if there is no more slime from said color, destroy it's colored gate
//green
if !instance_exists(obj_slime)
{   with (obj_green_gate) instance_destroy() }
//purple
if !instance_exists(obj_slime_runner)
{   with (obj_purple_gate) instance_destroy() }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///restart if dead
if !instance_exists(cl_player)
    and global.gameon
    {
    ded=true
    }  
   
if ded
    {
        if keyboard_check_pressed(vk_anykey)
        {
            room_restart()
        }
    }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///key reactions controls
//locking these controls outside of the actual game rooms
if global.gameon
{
//quit
if keyboard_check_pressed(vk_escape) {game_end()}
//restart
if keyboard_check_pressed(ord("R")) 
    {
    restarting = true
    room_restart()
    }
//debugging
if keyboard_check_pressed(ord("T")) {global.debugger = !global.debugger}
//fullscreen
if keyboard_check_pressed(ord("F")) 
{
    if window_get_fullscreen()
    {
       window_set_fullscreen(false);
    }
    else
    {
       window_set_fullscreen(true);
    }
}
//pause
if keyboard_check_pressed(ord("P")) {global.paused = !global.paused}
//swap character
if keyboard_check_pressed(ord("X"))
    {
    if global.playerid = p_d
        {
        global.playerid = p_e;
        global.otherid = p_d;
        } else { global.playerid = p_d; global.otherid = p_e;}
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///debug controls

if global.debugger
{ 
    if keyboard_check_pressed(ord("K")) {with (cl_slime){instance_destroy()}};
    
    if keyboard_check_pressed(ord("L")) 
    {
    global.worldClear = 1
    }
    
    if keyboard_check_pressed(ord("Z"))
        {
            if room_exists(room+1)
            {
            global.lastroom=room
            room_goto_next()
            }
                        
            /*if keyboard_check(vk_shift) &amp;&amp; !global.lastroom=room_splash 
            { 
                room_goto(global.lastroom);
                global.lastroom=global.oldlastroom;
                //oh boy, i'll need a lot more code to do what I want
            } else {if room_exists(room_next(room)){global.oldlastroom  = global.lastroom; global.lastroom = room; room_goto_next()}}
            */  
        }
    // warping to world starts
    if keyboard_check_pressed(vk_f1)
        {
        global.lastroom=global.w1start - 1;
        room_goto(global.w1start);
        }
    if keyboard_check_pressed(vk_f2)
        {
        global.lastroom=global.w1start;
        room_goto(global.w2start);
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !restarting
{
    global.lastroom=room
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///gui size
/*
originalX=0
orignalY=0
*/
display_set_gui_size(window_get_width(), window_get_height())
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///the end
if room=the_end
{
    var height = window_get_height()
    var width = window_get_width()
    var message = 
        "THANK YOU FOR PLAYING#
        #Any kind of feedback is welcome.
        #Contact me on twitter (@Ardydo)
        #or at ardy.aileron@gmail.com
        #
        #Press ESC to EXIT"

    draw_text_simple(width/2,height/2, message)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///death text

if ded
{
    var height = window_get_height();
    var width = window_get_width();
    
    var message = 
        "You died.
        #Press any key to respawn";
    
    draw_text_simple(width/2,height/2, message);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///debugger text

if global.debugger
{
    draw_text_shadow(window_get_width()/2,0,"Debugging on",c_white,c_black,1,fa_center,fa_top)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///paused text

if global.paused
{
    var message, tX, tY;
    message =
        "PAUSED
        #Press P to continue";
    tX = window_get_width()/2;
    tY = window_get_height()/2;
    draw_text_simple(tX, tY, message)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
